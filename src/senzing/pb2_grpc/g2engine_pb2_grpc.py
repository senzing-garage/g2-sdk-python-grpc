# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

# pylint: disable=R0205,R0902,R0903,R0913,E1101


import grpc

from . import g2engine_pb2 as g2engine__pb2


class G2EngineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddRecord = channel.unary_unary(
            "/g2engine.G2Engine/AddRecord",
            request_serializer=g2engine__pb2.AddRecordRequest.SerializeToString,
            response_deserializer=g2engine__pb2.AddRecordResponse.FromString,
        )
        self.AddRecordWithInfo = channel.unary_unary(
            "/g2engine.G2Engine/AddRecordWithInfo",
            request_serializer=g2engine__pb2.AddRecordWithInfoRequest.SerializeToString,
            response_deserializer=g2engine__pb2.AddRecordWithInfoResponse.FromString,
        )
        self.CloseExport = channel.unary_unary(
            "/g2engine.G2Engine/CloseExport",
            request_serializer=g2engine__pb2.CloseExportRequest.SerializeToString,
            response_deserializer=g2engine__pb2.CloseExportResponse.FromString,
        )
        self.CountRedoRecords = channel.unary_unary(
            "/g2engine.G2Engine/CountRedoRecords",
            request_serializer=g2engine__pb2.CountRedoRecordsRequest.SerializeToString,
            response_deserializer=g2engine__pb2.CountRedoRecordsResponse.FromString,
        )
        self.DeleteRecord = channel.unary_unary(
            "/g2engine.G2Engine/DeleteRecord",
            request_serializer=g2engine__pb2.DeleteRecordRequest.SerializeToString,
            response_deserializer=g2engine__pb2.DeleteRecordResponse.FromString,
        )
        self.DeleteRecordWithInfo = channel.unary_unary(
            "/g2engine.G2Engine/DeleteRecordWithInfo",
            request_serializer=g2engine__pb2.DeleteRecordWithInfoRequest.SerializeToString,
            response_deserializer=g2engine__pb2.DeleteRecordWithInfoResponse.FromString,
        )
        self.Destroy = channel.unary_unary(
            "/g2engine.G2Engine/Destroy",
            request_serializer=g2engine__pb2.DestroyRequest.SerializeToString,
            response_deserializer=g2engine__pb2.DestroyResponse.FromString,
        )
        self.ExportConfig = channel.unary_unary(
            "/g2engine.G2Engine/ExportConfig",
            request_serializer=g2engine__pb2.ExportConfigRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ExportConfigResponse.FromString,
        )
        self.ExportConfigAndConfigID = channel.unary_unary(
            "/g2engine.G2Engine/ExportConfigAndConfigID",
            request_serializer=g2engine__pb2.ExportConfigAndConfigIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ExportConfigAndConfigIDResponse.FromString,
        )
        self.ExportCSVEntityReport = channel.unary_unary(
            "/g2engine.G2Engine/ExportCSVEntityReport",
            request_serializer=g2engine__pb2.ExportCSVEntityReportRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ExportCSVEntityReportResponse.FromString,
        )
        self.ExportJSONEntityReport = channel.unary_unary(
            "/g2engine.G2Engine/ExportJSONEntityReport",
            request_serializer=g2engine__pb2.ExportJSONEntityReportRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ExportJSONEntityReportResponse.FromString,
        )
        self.FetchNext = channel.unary_unary(
            "/g2engine.G2Engine/FetchNext",
            request_serializer=g2engine__pb2.FetchNextRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FetchNextResponse.FromString,
        )
        self.FindInterestingEntitiesByEntityID = channel.unary_unary(
            "/g2engine.G2Engine/FindInterestingEntitiesByEntityID",
            request_serializer=g2engine__pb2.FindInterestingEntitiesByEntityIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindInterestingEntitiesByEntityIDResponse.FromString,
        )
        self.FindInterestingEntitiesByRecordID = channel.unary_unary(
            "/g2engine.G2Engine/FindInterestingEntitiesByRecordID",
            request_serializer=g2engine__pb2.FindInterestingEntitiesByRecordIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindInterestingEntitiesByRecordIDResponse.FromString,
        )
        self.FindNetworkByEntityID = channel.unary_unary(
            "/g2engine.G2Engine/FindNetworkByEntityID",
            request_serializer=g2engine__pb2.FindNetworkByEntityIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindNetworkByEntityIDResponse.FromString,
        )
        self.FindNetworkByEntityID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/FindNetworkByEntityID_V2",
            request_serializer=g2engine__pb2.FindNetworkByEntityID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.FindNetworkByEntityID_V2Response.FromString,
        )
        self.FindNetworkByRecordID = channel.unary_unary(
            "/g2engine.G2Engine/FindNetworkByRecordID",
            request_serializer=g2engine__pb2.FindNetworkByRecordIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindNetworkByRecordIDResponse.FromString,
        )
        self.FindNetworkByRecordID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/FindNetworkByRecordID_V2",
            request_serializer=g2engine__pb2.FindNetworkByRecordID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.FindNetworkByRecordID_V2Response.FromString,
        )
        self.FindPathByEntityID = channel.unary_unary(
            "/g2engine.G2Engine/FindPathByEntityID",
            request_serializer=g2engine__pb2.FindPathByEntityIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathByEntityIDResponse.FromString,
        )
        self.FindPathByEntityID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/FindPathByEntityID_V2",
            request_serializer=g2engine__pb2.FindPathByEntityID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathByEntityID_V2Response.FromString,
        )
        self.FindPathByRecordID = channel.unary_unary(
            "/g2engine.G2Engine/FindPathByRecordID",
            request_serializer=g2engine__pb2.FindPathByRecordIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathByRecordIDResponse.FromString,
        )
        self.FindPathByRecordID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/FindPathByRecordID_V2",
            request_serializer=g2engine__pb2.FindPathByRecordID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathByRecordID_V2Response.FromString,
        )
        self.FindPathExcludingByEntityID = channel.unary_unary(
            "/g2engine.G2Engine/FindPathExcludingByEntityID",
            request_serializer=g2engine__pb2.FindPathExcludingByEntityIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathExcludingByEntityIDResponse.FromString,
        )
        self.FindPathExcludingByEntityID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/FindPathExcludingByEntityID_V2",
            request_serializer=g2engine__pb2.FindPathExcludingByEntityID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathExcludingByEntityID_V2Response.FromString,
        )
        self.FindPathExcludingByRecordID = channel.unary_unary(
            "/g2engine.G2Engine/FindPathExcludingByRecordID",
            request_serializer=g2engine__pb2.FindPathExcludingByRecordIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathExcludingByRecordIDResponse.FromString,
        )
        self.FindPathExcludingByRecordID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/FindPathExcludingByRecordID_V2",
            request_serializer=g2engine__pb2.FindPathExcludingByRecordID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathExcludingByRecordID_V2Response.FromString,
        )
        self.FindPathIncludingSourceByEntityID = channel.unary_unary(
            "/g2engine.G2Engine/FindPathIncludingSourceByEntityID",
            request_serializer=g2engine__pb2.FindPathIncludingSourceByEntityIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathIncludingSourceByEntityIDResponse.FromString,
        )
        self.FindPathIncludingSourceByEntityID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/FindPathIncludingSourceByEntityID_V2",
            request_serializer=g2engine__pb2.FindPathIncludingSourceByEntityID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathIncludingSourceByEntityID_V2Response.FromString,
        )
        self.FindPathIncludingSourceByRecordID = channel.unary_unary(
            "/g2engine.G2Engine/FindPathIncludingSourceByRecordID",
            request_serializer=g2engine__pb2.FindPathIncludingSourceByRecordIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathIncludingSourceByRecordIDResponse.FromString,
        )
        self.FindPathIncludingSourceByRecordID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/FindPathIncludingSourceByRecordID_V2",
            request_serializer=g2engine__pb2.FindPathIncludingSourceByRecordID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.FindPathIncludingSourceByRecordID_V2Response.FromString,
        )
        self.GetActiveConfigID = channel.unary_unary(
            "/g2engine.G2Engine/GetActiveConfigID",
            request_serializer=g2engine__pb2.GetActiveConfigIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.GetActiveConfigIDResponse.FromString,
        )
        self.GetEntityByEntityID = channel.unary_unary(
            "/g2engine.G2Engine/GetEntityByEntityID",
            request_serializer=g2engine__pb2.GetEntityByEntityIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.GetEntityByEntityIDResponse.FromString,
        )
        self.GetEntityByEntityID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/GetEntityByEntityID_V2",
            request_serializer=g2engine__pb2.GetEntityByEntityID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.GetEntityByEntityID_V2Response.FromString,
        )
        self.GetEntityByRecordID = channel.unary_unary(
            "/g2engine.G2Engine/GetEntityByRecordID",
            request_serializer=g2engine__pb2.GetEntityByRecordIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.GetEntityByRecordIDResponse.FromString,
        )
        self.GetEntityByRecordID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/GetEntityByRecordID_V2",
            request_serializer=g2engine__pb2.GetEntityByRecordID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.GetEntityByRecordID_V2Response.FromString,
        )
        self.GetRecord = channel.unary_unary(
            "/g2engine.G2Engine/GetRecord",
            request_serializer=g2engine__pb2.GetRecordRequest.SerializeToString,
            response_deserializer=g2engine__pb2.GetRecordResponse.FromString,
        )
        self.GetRecord_V2 = channel.unary_unary(
            "/g2engine.G2Engine/GetRecord_V2",
            request_serializer=g2engine__pb2.GetRecord_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.GetRecord_V2Response.FromString,
        )
        self.GetRedoRecord = channel.unary_unary(
            "/g2engine.G2Engine/GetRedoRecord",
            request_serializer=g2engine__pb2.GetRedoRecordRequest.SerializeToString,
            response_deserializer=g2engine__pb2.GetRedoRecordResponse.FromString,
        )
        self.GetRepositoryLastModifiedTime = channel.unary_unary(
            "/g2engine.G2Engine/GetRepositoryLastModifiedTime",
            request_serializer=g2engine__pb2.GetRepositoryLastModifiedTimeRequest.SerializeToString,
            response_deserializer=g2engine__pb2.GetRepositoryLastModifiedTimeResponse.FromString,
        )
        self.GetVirtualEntityByRecordID = channel.unary_unary(
            "/g2engine.G2Engine/GetVirtualEntityByRecordID",
            request_serializer=g2engine__pb2.GetVirtualEntityByRecordIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.GetVirtualEntityByRecordIDResponse.FromString,
        )
        self.GetVirtualEntityByRecordID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/GetVirtualEntityByRecordID_V2",
            request_serializer=g2engine__pb2.GetVirtualEntityByRecordID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.GetVirtualEntityByRecordID_V2Response.FromString,
        )
        self.HowEntityByEntityID = channel.unary_unary(
            "/g2engine.G2Engine/HowEntityByEntityID",
            request_serializer=g2engine__pb2.HowEntityByEntityIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.HowEntityByEntityIDResponse.FromString,
        )
        self.HowEntityByEntityID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/HowEntityByEntityID_V2",
            request_serializer=g2engine__pb2.HowEntityByEntityID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.HowEntityByEntityID_V2Response.FromString,
        )
        self.Init = channel.unary_unary(
            "/g2engine.G2Engine/Init",
            request_serializer=g2engine__pb2.InitRequest.SerializeToString,
            response_deserializer=g2engine__pb2.InitResponse.FromString,
        )
        self.InitWithConfigID = channel.unary_unary(
            "/g2engine.G2Engine/InitWithConfigID",
            request_serializer=g2engine__pb2.InitWithConfigIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.InitWithConfigIDResponse.FromString,
        )
        self.PrimeEngine = channel.unary_unary(
            "/g2engine.G2Engine/PrimeEngine",
            request_serializer=g2engine__pb2.PrimeEngineRequest.SerializeToString,
            response_deserializer=g2engine__pb2.PrimeEngineResponse.FromString,
        )
        self.Process = channel.unary_unary(
            "/g2engine.G2Engine/Process",
            request_serializer=g2engine__pb2.ProcessRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ProcessResponse.FromString,
        )
        self.ProcessWithInfo = channel.unary_unary(
            "/g2engine.G2Engine/ProcessWithInfo",
            request_serializer=g2engine__pb2.ProcessWithInfoRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ProcessWithInfoResponse.FromString,
        )
        self.PurgeRepository = channel.unary_unary(
            "/g2engine.G2Engine/PurgeRepository",
            request_serializer=g2engine__pb2.PurgeRepositoryRequest.SerializeToString,
            response_deserializer=g2engine__pb2.PurgeRepositoryResponse.FromString,
        )
        self.ReevaluateEntity = channel.unary_unary(
            "/g2engine.G2Engine/ReevaluateEntity",
            request_serializer=g2engine__pb2.ReevaluateEntityRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ReevaluateEntityResponse.FromString,
        )
        self.ReevaluateEntityWithInfo = channel.unary_unary(
            "/g2engine.G2Engine/ReevaluateEntityWithInfo",
            request_serializer=g2engine__pb2.ReevaluateEntityWithInfoRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ReevaluateEntityWithInfoResponse.FromString,
        )
        self.ReevaluateRecord = channel.unary_unary(
            "/g2engine.G2Engine/ReevaluateRecord",
            request_serializer=g2engine__pb2.ReevaluateRecordRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ReevaluateRecordResponse.FromString,
        )
        self.ReevaluateRecordWithInfo = channel.unary_unary(
            "/g2engine.G2Engine/ReevaluateRecordWithInfo",
            request_serializer=g2engine__pb2.ReevaluateRecordWithInfoRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ReevaluateRecordWithInfoResponse.FromString,
        )
        self.Reinit = channel.unary_unary(
            "/g2engine.G2Engine/Reinit",
            request_serializer=g2engine__pb2.ReinitRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ReinitResponse.FromString,
        )
        self.ReplaceRecord = channel.unary_unary(
            "/g2engine.G2Engine/ReplaceRecord",
            request_serializer=g2engine__pb2.ReplaceRecordRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ReplaceRecordResponse.FromString,
        )
        self.ReplaceRecordWithInfo = channel.unary_unary(
            "/g2engine.G2Engine/ReplaceRecordWithInfo",
            request_serializer=g2engine__pb2.ReplaceRecordWithInfoRequest.SerializeToString,
            response_deserializer=g2engine__pb2.ReplaceRecordWithInfoResponse.FromString,
        )
        self.SearchByAttributes = channel.unary_unary(
            "/g2engine.G2Engine/SearchByAttributes",
            request_serializer=g2engine__pb2.SearchByAttributesRequest.SerializeToString,
            response_deserializer=g2engine__pb2.SearchByAttributesResponse.FromString,
        )
        self.SearchByAttributes_V2 = channel.unary_unary(
            "/g2engine.G2Engine/SearchByAttributes_V2",
            request_serializer=g2engine__pb2.SearchByAttributes_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.SearchByAttributes_V2Response.FromString,
        )
        self.Stats = channel.unary_unary(
            "/g2engine.G2Engine/Stats",
            request_serializer=g2engine__pb2.StatsRequest.SerializeToString,
            response_deserializer=g2engine__pb2.StatsResponse.FromString,
        )
        self.StreamExportCSVEntityReport = channel.unary_stream(
            "/g2engine.G2Engine/StreamExportCSVEntityReport",
            request_serializer=g2engine__pb2.StreamExportCSVEntityReportRequest.SerializeToString,
            response_deserializer=g2engine__pb2.StreamExportCSVEntityReportResponse.FromString,
        )
        self.StreamExportJSONEntityReport = channel.unary_stream(
            "/g2engine.G2Engine/StreamExportJSONEntityReport",
            request_serializer=g2engine__pb2.StreamExportJSONEntityReportRequest.SerializeToString,
            response_deserializer=g2engine__pb2.StreamExportJSONEntityReportResponse.FromString,
        )
        self.WhyEntities = channel.unary_unary(
            "/g2engine.G2Engine/WhyEntities",
            request_serializer=g2engine__pb2.WhyEntitiesRequest.SerializeToString,
            response_deserializer=g2engine__pb2.WhyEntitiesResponse.FromString,
        )
        self.WhyEntities_V2 = channel.unary_unary(
            "/g2engine.G2Engine/WhyEntities_V2",
            request_serializer=g2engine__pb2.WhyEntities_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.WhyEntities_V2Response.FromString,
        )
        self.WhyEntityByEntityID = channel.unary_unary(
            "/g2engine.G2Engine/WhyEntityByEntityID",
            request_serializer=g2engine__pb2.WhyEntityByEntityIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.WhyEntityByEntityIDResponse.FromString,
        )
        self.WhyEntityByEntityID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/WhyEntityByEntityID_V2",
            request_serializer=g2engine__pb2.WhyEntityByEntityID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.WhyEntityByEntityID_V2Response.FromString,
        )
        self.WhyEntityByRecordID = channel.unary_unary(
            "/g2engine.G2Engine/WhyEntityByRecordID",
            request_serializer=g2engine__pb2.WhyEntityByRecordIDRequest.SerializeToString,
            response_deserializer=g2engine__pb2.WhyEntityByRecordIDResponse.FromString,
        )
        self.WhyEntityByRecordID_V2 = channel.unary_unary(
            "/g2engine.G2Engine/WhyEntityByRecordID_V2",
            request_serializer=g2engine__pb2.WhyEntityByRecordID_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.WhyEntityByRecordID_V2Response.FromString,
        )
        self.WhyRecords = channel.unary_unary(
            "/g2engine.G2Engine/WhyRecords",
            request_serializer=g2engine__pb2.WhyRecordsRequest.SerializeToString,
            response_deserializer=g2engine__pb2.WhyRecordsResponse.FromString,
        )
        self.WhyRecords_V2 = channel.unary_unary(
            "/g2engine.G2Engine/WhyRecords_V2",
            request_serializer=g2engine__pb2.WhyRecords_V2Request.SerializeToString,
            response_deserializer=g2engine__pb2.WhyRecords_V2Response.FromString,
        )


class G2EngineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AddRecordWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CloseExport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CountRedoRecords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteRecordWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Destroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ExportConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ExportConfigAndConfigID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ExportCSVEntityReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ExportJSONEntityReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FetchNext(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindInterestingEntitiesByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindInterestingEntitiesByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindNetworkByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindNetworkByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindNetworkByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindNetworkByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathExcludingByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathExcludingByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathExcludingByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathExcludingByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathIncludingSourceByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathIncludingSourceByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathIncludingSourceByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindPathIncludingSourceByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetActiveConfigID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetEntityByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetEntityByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetEntityByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetEntityByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetRecord_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetRedoRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetRepositoryLastModifiedTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetVirtualEntityByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetVirtualEntityByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def HowEntityByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def HowEntityByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def InitWithConfigID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PrimeEngine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Process(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ProcessWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PurgeRepository(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReevaluateEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReevaluateEntityWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReevaluateRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReevaluateRecordWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Reinit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReplaceRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReplaceRecordWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SearchByAttributes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SearchByAttributes_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Stats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def StreamExportCSVEntityReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def StreamExportJSONEntityReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WhyEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WhyEntities_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WhyEntityByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WhyEntityByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WhyEntityByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WhyEntityByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WhyRecords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WhyRecords_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_G2EngineServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "AddRecord": grpc.unary_unary_rpc_method_handler(
            servicer.AddRecord,
            request_deserializer=g2engine__pb2.AddRecordRequest.FromString,
            response_serializer=g2engine__pb2.AddRecordResponse.SerializeToString,
        ),
        "AddRecordWithInfo": grpc.unary_unary_rpc_method_handler(
            servicer.AddRecordWithInfo,
            request_deserializer=g2engine__pb2.AddRecordWithInfoRequest.FromString,
            response_serializer=g2engine__pb2.AddRecordWithInfoResponse.SerializeToString,
        ),
        "CloseExport": grpc.unary_unary_rpc_method_handler(
            servicer.CloseExport,
            request_deserializer=g2engine__pb2.CloseExportRequest.FromString,
            response_serializer=g2engine__pb2.CloseExportResponse.SerializeToString,
        ),
        "CountRedoRecords": grpc.unary_unary_rpc_method_handler(
            servicer.CountRedoRecords,
            request_deserializer=g2engine__pb2.CountRedoRecordsRequest.FromString,
            response_serializer=g2engine__pb2.CountRedoRecordsResponse.SerializeToString,
        ),
        "DeleteRecord": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteRecord,
            request_deserializer=g2engine__pb2.DeleteRecordRequest.FromString,
            response_serializer=g2engine__pb2.DeleteRecordResponse.SerializeToString,
        ),
        "DeleteRecordWithInfo": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteRecordWithInfo,
            request_deserializer=g2engine__pb2.DeleteRecordWithInfoRequest.FromString,
            response_serializer=g2engine__pb2.DeleteRecordWithInfoResponse.SerializeToString,
        ),
        "Destroy": grpc.unary_unary_rpc_method_handler(
            servicer.Destroy,
            request_deserializer=g2engine__pb2.DestroyRequest.FromString,
            response_serializer=g2engine__pb2.DestroyResponse.SerializeToString,
        ),
        "ExportConfig": grpc.unary_unary_rpc_method_handler(
            servicer.ExportConfig,
            request_deserializer=g2engine__pb2.ExportConfigRequest.FromString,
            response_serializer=g2engine__pb2.ExportConfigResponse.SerializeToString,
        ),
        "ExportConfigAndConfigID": grpc.unary_unary_rpc_method_handler(
            servicer.ExportConfigAndConfigID,
            request_deserializer=g2engine__pb2.ExportConfigAndConfigIDRequest.FromString,
            response_serializer=g2engine__pb2.ExportConfigAndConfigIDResponse.SerializeToString,
        ),
        "ExportCSVEntityReport": grpc.unary_unary_rpc_method_handler(
            servicer.ExportCSVEntityReport,
            request_deserializer=g2engine__pb2.ExportCSVEntityReportRequest.FromString,
            response_serializer=g2engine__pb2.ExportCSVEntityReportResponse.SerializeToString,
        ),
        "ExportJSONEntityReport": grpc.unary_unary_rpc_method_handler(
            servicer.ExportJSONEntityReport,
            request_deserializer=g2engine__pb2.ExportJSONEntityReportRequest.FromString,
            response_serializer=g2engine__pb2.ExportJSONEntityReportResponse.SerializeToString,
        ),
        "FetchNext": grpc.unary_unary_rpc_method_handler(
            servicer.FetchNext,
            request_deserializer=g2engine__pb2.FetchNextRequest.FromString,
            response_serializer=g2engine__pb2.FetchNextResponse.SerializeToString,
        ),
        "FindInterestingEntitiesByEntityID": grpc.unary_unary_rpc_method_handler(
            servicer.FindInterestingEntitiesByEntityID,
            request_deserializer=g2engine__pb2.FindInterestingEntitiesByEntityIDRequest.FromString,
            response_serializer=g2engine__pb2.FindInterestingEntitiesByEntityIDResponse.SerializeToString,
        ),
        "FindInterestingEntitiesByRecordID": grpc.unary_unary_rpc_method_handler(
            servicer.FindInterestingEntitiesByRecordID,
            request_deserializer=g2engine__pb2.FindInterestingEntitiesByRecordIDRequest.FromString,
            response_serializer=g2engine__pb2.FindInterestingEntitiesByRecordIDResponse.SerializeToString,
        ),
        "FindNetworkByEntityID": grpc.unary_unary_rpc_method_handler(
            servicer.FindNetworkByEntityID,
            request_deserializer=g2engine__pb2.FindNetworkByEntityIDRequest.FromString,
            response_serializer=g2engine__pb2.FindNetworkByEntityIDResponse.SerializeToString,
        ),
        "FindNetworkByEntityID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.FindNetworkByEntityID_V2,
            request_deserializer=g2engine__pb2.FindNetworkByEntityID_V2Request.FromString,
            response_serializer=g2engine__pb2.FindNetworkByEntityID_V2Response.SerializeToString,
        ),
        "FindNetworkByRecordID": grpc.unary_unary_rpc_method_handler(
            servicer.FindNetworkByRecordID,
            request_deserializer=g2engine__pb2.FindNetworkByRecordIDRequest.FromString,
            response_serializer=g2engine__pb2.FindNetworkByRecordIDResponse.SerializeToString,
        ),
        "FindNetworkByRecordID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.FindNetworkByRecordID_V2,
            request_deserializer=g2engine__pb2.FindNetworkByRecordID_V2Request.FromString,
            response_serializer=g2engine__pb2.FindNetworkByRecordID_V2Response.SerializeToString,
        ),
        "FindPathByEntityID": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathByEntityID,
            request_deserializer=g2engine__pb2.FindPathByEntityIDRequest.FromString,
            response_serializer=g2engine__pb2.FindPathByEntityIDResponse.SerializeToString,
        ),
        "FindPathByEntityID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathByEntityID_V2,
            request_deserializer=g2engine__pb2.FindPathByEntityID_V2Request.FromString,
            response_serializer=g2engine__pb2.FindPathByEntityID_V2Response.SerializeToString,
        ),
        "FindPathByRecordID": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathByRecordID,
            request_deserializer=g2engine__pb2.FindPathByRecordIDRequest.FromString,
            response_serializer=g2engine__pb2.FindPathByRecordIDResponse.SerializeToString,
        ),
        "FindPathByRecordID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathByRecordID_V2,
            request_deserializer=g2engine__pb2.FindPathByRecordID_V2Request.FromString,
            response_serializer=g2engine__pb2.FindPathByRecordID_V2Response.SerializeToString,
        ),
        "FindPathExcludingByEntityID": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathExcludingByEntityID,
            request_deserializer=g2engine__pb2.FindPathExcludingByEntityIDRequest.FromString,
            response_serializer=g2engine__pb2.FindPathExcludingByEntityIDResponse.SerializeToString,
        ),
        "FindPathExcludingByEntityID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathExcludingByEntityID_V2,
            request_deserializer=g2engine__pb2.FindPathExcludingByEntityID_V2Request.FromString,
            response_serializer=g2engine__pb2.FindPathExcludingByEntityID_V2Response.SerializeToString,
        ),
        "FindPathExcludingByRecordID": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathExcludingByRecordID,
            request_deserializer=g2engine__pb2.FindPathExcludingByRecordIDRequest.FromString,
            response_serializer=g2engine__pb2.FindPathExcludingByRecordIDResponse.SerializeToString,
        ),
        "FindPathExcludingByRecordID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathExcludingByRecordID_V2,
            request_deserializer=g2engine__pb2.FindPathExcludingByRecordID_V2Request.FromString,
            response_serializer=g2engine__pb2.FindPathExcludingByRecordID_V2Response.SerializeToString,
        ),
        "FindPathIncludingSourceByEntityID": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathIncludingSourceByEntityID,
            request_deserializer=g2engine__pb2.FindPathIncludingSourceByEntityIDRequest.FromString,
            response_serializer=g2engine__pb2.FindPathIncludingSourceByEntityIDResponse.SerializeToString,
        ),
        "FindPathIncludingSourceByEntityID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathIncludingSourceByEntityID_V2,
            request_deserializer=g2engine__pb2.FindPathIncludingSourceByEntityID_V2Request.FromString,
            response_serializer=g2engine__pb2.FindPathIncludingSourceByEntityID_V2Response.SerializeToString,
        ),
        "FindPathIncludingSourceByRecordID": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathIncludingSourceByRecordID,
            request_deserializer=g2engine__pb2.FindPathIncludingSourceByRecordIDRequest.FromString,
            response_serializer=g2engine__pb2.FindPathIncludingSourceByRecordIDResponse.SerializeToString,
        ),
        "FindPathIncludingSourceByRecordID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.FindPathIncludingSourceByRecordID_V2,
            request_deserializer=g2engine__pb2.FindPathIncludingSourceByRecordID_V2Request.FromString,
            response_serializer=g2engine__pb2.FindPathIncludingSourceByRecordID_V2Response.SerializeToString,
        ),
        "GetActiveConfigID": grpc.unary_unary_rpc_method_handler(
            servicer.GetActiveConfigID,
            request_deserializer=g2engine__pb2.GetActiveConfigIDRequest.FromString,
            response_serializer=g2engine__pb2.GetActiveConfigIDResponse.SerializeToString,
        ),
        "GetEntityByEntityID": grpc.unary_unary_rpc_method_handler(
            servicer.GetEntityByEntityID,
            request_deserializer=g2engine__pb2.GetEntityByEntityIDRequest.FromString,
            response_serializer=g2engine__pb2.GetEntityByEntityIDResponse.SerializeToString,
        ),
        "GetEntityByEntityID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.GetEntityByEntityID_V2,
            request_deserializer=g2engine__pb2.GetEntityByEntityID_V2Request.FromString,
            response_serializer=g2engine__pb2.GetEntityByEntityID_V2Response.SerializeToString,
        ),
        "GetEntityByRecordID": grpc.unary_unary_rpc_method_handler(
            servicer.GetEntityByRecordID,
            request_deserializer=g2engine__pb2.GetEntityByRecordIDRequest.FromString,
            response_serializer=g2engine__pb2.GetEntityByRecordIDResponse.SerializeToString,
        ),
        "GetEntityByRecordID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.GetEntityByRecordID_V2,
            request_deserializer=g2engine__pb2.GetEntityByRecordID_V2Request.FromString,
            response_serializer=g2engine__pb2.GetEntityByRecordID_V2Response.SerializeToString,
        ),
        "GetRecord": grpc.unary_unary_rpc_method_handler(
            servicer.GetRecord,
            request_deserializer=g2engine__pb2.GetRecordRequest.FromString,
            response_serializer=g2engine__pb2.GetRecordResponse.SerializeToString,
        ),
        "GetRecord_V2": grpc.unary_unary_rpc_method_handler(
            servicer.GetRecord_V2,
            request_deserializer=g2engine__pb2.GetRecord_V2Request.FromString,
            response_serializer=g2engine__pb2.GetRecord_V2Response.SerializeToString,
        ),
        "GetRedoRecord": grpc.unary_unary_rpc_method_handler(
            servicer.GetRedoRecord,
            request_deserializer=g2engine__pb2.GetRedoRecordRequest.FromString,
            response_serializer=g2engine__pb2.GetRedoRecordResponse.SerializeToString,
        ),
        "GetRepositoryLastModifiedTime": grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryLastModifiedTime,
            request_deserializer=g2engine__pb2.GetRepositoryLastModifiedTimeRequest.FromString,
            response_serializer=g2engine__pb2.GetRepositoryLastModifiedTimeResponse.SerializeToString,
        ),
        "GetVirtualEntityByRecordID": grpc.unary_unary_rpc_method_handler(
            servicer.GetVirtualEntityByRecordID,
            request_deserializer=g2engine__pb2.GetVirtualEntityByRecordIDRequest.FromString,
            response_serializer=g2engine__pb2.GetVirtualEntityByRecordIDResponse.SerializeToString,
        ),
        "GetVirtualEntityByRecordID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.GetVirtualEntityByRecordID_V2,
            request_deserializer=g2engine__pb2.GetVirtualEntityByRecordID_V2Request.FromString,
            response_serializer=g2engine__pb2.GetVirtualEntityByRecordID_V2Response.SerializeToString,
        ),
        "HowEntityByEntityID": grpc.unary_unary_rpc_method_handler(
            servicer.HowEntityByEntityID,
            request_deserializer=g2engine__pb2.HowEntityByEntityIDRequest.FromString,
            response_serializer=g2engine__pb2.HowEntityByEntityIDResponse.SerializeToString,
        ),
        "HowEntityByEntityID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.HowEntityByEntityID_V2,
            request_deserializer=g2engine__pb2.HowEntityByEntityID_V2Request.FromString,
            response_serializer=g2engine__pb2.HowEntityByEntityID_V2Response.SerializeToString,
        ),
        "Init": grpc.unary_unary_rpc_method_handler(
            servicer.Init,
            request_deserializer=g2engine__pb2.InitRequest.FromString,
            response_serializer=g2engine__pb2.InitResponse.SerializeToString,
        ),
        "InitWithConfigID": grpc.unary_unary_rpc_method_handler(
            servicer.InitWithConfigID,
            request_deserializer=g2engine__pb2.InitWithConfigIDRequest.FromString,
            response_serializer=g2engine__pb2.InitWithConfigIDResponse.SerializeToString,
        ),
        "PrimeEngine": grpc.unary_unary_rpc_method_handler(
            servicer.PrimeEngine,
            request_deserializer=g2engine__pb2.PrimeEngineRequest.FromString,
            response_serializer=g2engine__pb2.PrimeEngineResponse.SerializeToString,
        ),
        "Process": grpc.unary_unary_rpc_method_handler(
            servicer.Process,
            request_deserializer=g2engine__pb2.ProcessRequest.FromString,
            response_serializer=g2engine__pb2.ProcessResponse.SerializeToString,
        ),
        "ProcessWithInfo": grpc.unary_unary_rpc_method_handler(
            servicer.ProcessWithInfo,
            request_deserializer=g2engine__pb2.ProcessWithInfoRequest.FromString,
            response_serializer=g2engine__pb2.ProcessWithInfoResponse.SerializeToString,
        ),
        "PurgeRepository": grpc.unary_unary_rpc_method_handler(
            servicer.PurgeRepository,
            request_deserializer=g2engine__pb2.PurgeRepositoryRequest.FromString,
            response_serializer=g2engine__pb2.PurgeRepositoryResponse.SerializeToString,
        ),
        "ReevaluateEntity": grpc.unary_unary_rpc_method_handler(
            servicer.ReevaluateEntity,
            request_deserializer=g2engine__pb2.ReevaluateEntityRequest.FromString,
            response_serializer=g2engine__pb2.ReevaluateEntityResponse.SerializeToString,
        ),
        "ReevaluateEntityWithInfo": grpc.unary_unary_rpc_method_handler(
            servicer.ReevaluateEntityWithInfo,
            request_deserializer=g2engine__pb2.ReevaluateEntityWithInfoRequest.FromString,
            response_serializer=g2engine__pb2.ReevaluateEntityWithInfoResponse.SerializeToString,
        ),
        "ReevaluateRecord": grpc.unary_unary_rpc_method_handler(
            servicer.ReevaluateRecord,
            request_deserializer=g2engine__pb2.ReevaluateRecordRequest.FromString,
            response_serializer=g2engine__pb2.ReevaluateRecordResponse.SerializeToString,
        ),
        "ReevaluateRecordWithInfo": grpc.unary_unary_rpc_method_handler(
            servicer.ReevaluateRecordWithInfo,
            request_deserializer=g2engine__pb2.ReevaluateRecordWithInfoRequest.FromString,
            response_serializer=g2engine__pb2.ReevaluateRecordWithInfoResponse.SerializeToString,
        ),
        "Reinit": grpc.unary_unary_rpc_method_handler(
            servicer.Reinit,
            request_deserializer=g2engine__pb2.ReinitRequest.FromString,
            response_serializer=g2engine__pb2.ReinitResponse.SerializeToString,
        ),
        "ReplaceRecord": grpc.unary_unary_rpc_method_handler(
            servicer.ReplaceRecord,
            request_deserializer=g2engine__pb2.ReplaceRecordRequest.FromString,
            response_serializer=g2engine__pb2.ReplaceRecordResponse.SerializeToString,
        ),
        "ReplaceRecordWithInfo": grpc.unary_unary_rpc_method_handler(
            servicer.ReplaceRecordWithInfo,
            request_deserializer=g2engine__pb2.ReplaceRecordWithInfoRequest.FromString,
            response_serializer=g2engine__pb2.ReplaceRecordWithInfoResponse.SerializeToString,
        ),
        "SearchByAttributes": grpc.unary_unary_rpc_method_handler(
            servicer.SearchByAttributes,
            request_deserializer=g2engine__pb2.SearchByAttributesRequest.FromString,
            response_serializer=g2engine__pb2.SearchByAttributesResponse.SerializeToString,
        ),
        "SearchByAttributes_V2": grpc.unary_unary_rpc_method_handler(
            servicer.SearchByAttributes_V2,
            request_deserializer=g2engine__pb2.SearchByAttributes_V2Request.FromString,
            response_serializer=g2engine__pb2.SearchByAttributes_V2Response.SerializeToString,
        ),
        "Stats": grpc.unary_unary_rpc_method_handler(
            servicer.Stats,
            request_deserializer=g2engine__pb2.StatsRequest.FromString,
            response_serializer=g2engine__pb2.StatsResponse.SerializeToString,
        ),
        "StreamExportCSVEntityReport": grpc.unary_stream_rpc_method_handler(
            servicer.StreamExportCSVEntityReport,
            request_deserializer=g2engine__pb2.StreamExportCSVEntityReportRequest.FromString,
            response_serializer=g2engine__pb2.StreamExportCSVEntityReportResponse.SerializeToString,
        ),
        "StreamExportJSONEntityReport": grpc.unary_stream_rpc_method_handler(
            servicer.StreamExportJSONEntityReport,
            request_deserializer=g2engine__pb2.StreamExportJSONEntityReportRequest.FromString,
            response_serializer=g2engine__pb2.StreamExportJSONEntityReportResponse.SerializeToString,
        ),
        "WhyEntities": grpc.unary_unary_rpc_method_handler(
            servicer.WhyEntities,
            request_deserializer=g2engine__pb2.WhyEntitiesRequest.FromString,
            response_serializer=g2engine__pb2.WhyEntitiesResponse.SerializeToString,
        ),
        "WhyEntities_V2": grpc.unary_unary_rpc_method_handler(
            servicer.WhyEntities_V2,
            request_deserializer=g2engine__pb2.WhyEntities_V2Request.FromString,
            response_serializer=g2engine__pb2.WhyEntities_V2Response.SerializeToString,
        ),
        "WhyEntityByEntityID": grpc.unary_unary_rpc_method_handler(
            servicer.WhyEntityByEntityID,
            request_deserializer=g2engine__pb2.WhyEntityByEntityIDRequest.FromString,
            response_serializer=g2engine__pb2.WhyEntityByEntityIDResponse.SerializeToString,
        ),
        "WhyEntityByEntityID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.WhyEntityByEntityID_V2,
            request_deserializer=g2engine__pb2.WhyEntityByEntityID_V2Request.FromString,
            response_serializer=g2engine__pb2.WhyEntityByEntityID_V2Response.SerializeToString,
        ),
        "WhyEntityByRecordID": grpc.unary_unary_rpc_method_handler(
            servicer.WhyEntityByRecordID,
            request_deserializer=g2engine__pb2.WhyEntityByRecordIDRequest.FromString,
            response_serializer=g2engine__pb2.WhyEntityByRecordIDResponse.SerializeToString,
        ),
        "WhyEntityByRecordID_V2": grpc.unary_unary_rpc_method_handler(
            servicer.WhyEntityByRecordID_V2,
            request_deserializer=g2engine__pb2.WhyEntityByRecordID_V2Request.FromString,
            response_serializer=g2engine__pb2.WhyEntityByRecordID_V2Response.SerializeToString,
        ),
        "WhyRecords": grpc.unary_unary_rpc_method_handler(
            servicer.WhyRecords,
            request_deserializer=g2engine__pb2.WhyRecordsRequest.FromString,
            response_serializer=g2engine__pb2.WhyRecordsResponse.SerializeToString,
        ),
        "WhyRecords_V2": grpc.unary_unary_rpc_method_handler(
            servicer.WhyRecords_V2,
            request_deserializer=g2engine__pb2.WhyRecords_V2Request.FromString,
            response_serializer=g2engine__pb2.WhyRecords_V2Response.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "g2engine.G2Engine", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class G2Engine(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddRecord(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/AddRecord",
            g2engine__pb2.AddRecordRequest.SerializeToString,
            g2engine__pb2.AddRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def AddRecordWithInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/AddRecordWithInfo",
            g2engine__pb2.AddRecordWithInfoRequest.SerializeToString,
            g2engine__pb2.AddRecordWithInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CloseExport(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/CloseExport",
            g2engine__pb2.CloseExportRequest.SerializeToString,
            g2engine__pb2.CloseExportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CountRedoRecords(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/CountRedoRecords",
            g2engine__pb2.CountRedoRecordsRequest.SerializeToString,
            g2engine__pb2.CountRedoRecordsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteRecord(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/DeleteRecord",
            g2engine__pb2.DeleteRecordRequest.SerializeToString,
            g2engine__pb2.DeleteRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteRecordWithInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/DeleteRecordWithInfo",
            g2engine__pb2.DeleteRecordWithInfoRequest.SerializeToString,
            g2engine__pb2.DeleteRecordWithInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Destroy(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/Destroy",
            g2engine__pb2.DestroyRequest.SerializeToString,
            g2engine__pb2.DestroyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ExportConfig(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ExportConfig",
            g2engine__pb2.ExportConfigRequest.SerializeToString,
            g2engine__pb2.ExportConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ExportConfigAndConfigID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ExportConfigAndConfigID",
            g2engine__pb2.ExportConfigAndConfigIDRequest.SerializeToString,
            g2engine__pb2.ExportConfigAndConfigIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ExportCSVEntityReport(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ExportCSVEntityReport",
            g2engine__pb2.ExportCSVEntityReportRequest.SerializeToString,
            g2engine__pb2.ExportCSVEntityReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ExportJSONEntityReport(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ExportJSONEntityReport",
            g2engine__pb2.ExportJSONEntityReportRequest.SerializeToString,
            g2engine__pb2.ExportJSONEntityReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FetchNext(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FetchNext",
            g2engine__pb2.FetchNextRequest.SerializeToString,
            g2engine__pb2.FetchNextResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindInterestingEntitiesByEntityID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindInterestingEntitiesByEntityID",
            g2engine__pb2.FindInterestingEntitiesByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindInterestingEntitiesByEntityIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindInterestingEntitiesByRecordID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindInterestingEntitiesByRecordID",
            g2engine__pb2.FindInterestingEntitiesByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindInterestingEntitiesByRecordIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindNetworkByEntityID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindNetworkByEntityID",
            g2engine__pb2.FindNetworkByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindNetworkByEntityIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindNetworkByEntityID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindNetworkByEntityID_V2",
            g2engine__pb2.FindNetworkByEntityID_V2Request.SerializeToString,
            g2engine__pb2.FindNetworkByEntityID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindNetworkByRecordID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindNetworkByRecordID",
            g2engine__pb2.FindNetworkByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindNetworkByRecordIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindNetworkByRecordID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindNetworkByRecordID_V2",
            g2engine__pb2.FindNetworkByRecordID_V2Request.SerializeToString,
            g2engine__pb2.FindNetworkByRecordID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathByEntityID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathByEntityID",
            g2engine__pb2.FindPathByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindPathByEntityIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathByEntityID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathByEntityID_V2",
            g2engine__pb2.FindPathByEntityID_V2Request.SerializeToString,
            g2engine__pb2.FindPathByEntityID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathByRecordID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathByRecordID",
            g2engine__pb2.FindPathByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindPathByRecordIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathByRecordID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathByRecordID_V2",
            g2engine__pb2.FindPathByRecordID_V2Request.SerializeToString,
            g2engine__pb2.FindPathByRecordID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathExcludingByEntityID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathExcludingByEntityID",
            g2engine__pb2.FindPathExcludingByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindPathExcludingByEntityIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathExcludingByEntityID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathExcludingByEntityID_V2",
            g2engine__pb2.FindPathExcludingByEntityID_V2Request.SerializeToString,
            g2engine__pb2.FindPathExcludingByEntityID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathExcludingByRecordID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathExcludingByRecordID",
            g2engine__pb2.FindPathExcludingByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindPathExcludingByRecordIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathExcludingByRecordID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathExcludingByRecordID_V2",
            g2engine__pb2.FindPathExcludingByRecordID_V2Request.SerializeToString,
            g2engine__pb2.FindPathExcludingByRecordID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathIncludingSourceByEntityID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathIncludingSourceByEntityID",
            g2engine__pb2.FindPathIncludingSourceByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindPathIncludingSourceByEntityIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathIncludingSourceByEntityID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathIncludingSourceByEntityID_V2",
            g2engine__pb2.FindPathIncludingSourceByEntityID_V2Request.SerializeToString,
            g2engine__pb2.FindPathIncludingSourceByEntityID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathIncludingSourceByRecordID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathIncludingSourceByRecordID",
            g2engine__pb2.FindPathIncludingSourceByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindPathIncludingSourceByRecordIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindPathIncludingSourceByRecordID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/FindPathIncludingSourceByRecordID_V2",
            g2engine__pb2.FindPathIncludingSourceByRecordID_V2Request.SerializeToString,
            g2engine__pb2.FindPathIncludingSourceByRecordID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetActiveConfigID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetActiveConfigID",
            g2engine__pb2.GetActiveConfigIDRequest.SerializeToString,
            g2engine__pb2.GetActiveConfigIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetEntityByEntityID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetEntityByEntityID",
            g2engine__pb2.GetEntityByEntityIDRequest.SerializeToString,
            g2engine__pb2.GetEntityByEntityIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetEntityByEntityID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetEntityByEntityID_V2",
            g2engine__pb2.GetEntityByEntityID_V2Request.SerializeToString,
            g2engine__pb2.GetEntityByEntityID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetEntityByRecordID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetEntityByRecordID",
            g2engine__pb2.GetEntityByRecordIDRequest.SerializeToString,
            g2engine__pb2.GetEntityByRecordIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetEntityByRecordID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetEntityByRecordID_V2",
            g2engine__pb2.GetEntityByRecordID_V2Request.SerializeToString,
            g2engine__pb2.GetEntityByRecordID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetRecord(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetRecord",
            g2engine__pb2.GetRecordRequest.SerializeToString,
            g2engine__pb2.GetRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetRecord_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetRecord_V2",
            g2engine__pb2.GetRecord_V2Request.SerializeToString,
            g2engine__pb2.GetRecord_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetRedoRecord(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetRedoRecord",
            g2engine__pb2.GetRedoRecordRequest.SerializeToString,
            g2engine__pb2.GetRedoRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetRepositoryLastModifiedTime(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetRepositoryLastModifiedTime",
            g2engine__pb2.GetRepositoryLastModifiedTimeRequest.SerializeToString,
            g2engine__pb2.GetRepositoryLastModifiedTimeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetVirtualEntityByRecordID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetVirtualEntityByRecordID",
            g2engine__pb2.GetVirtualEntityByRecordIDRequest.SerializeToString,
            g2engine__pb2.GetVirtualEntityByRecordIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetVirtualEntityByRecordID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/GetVirtualEntityByRecordID_V2",
            g2engine__pb2.GetVirtualEntityByRecordID_V2Request.SerializeToString,
            g2engine__pb2.GetVirtualEntityByRecordID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def HowEntityByEntityID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/HowEntityByEntityID",
            g2engine__pb2.HowEntityByEntityIDRequest.SerializeToString,
            g2engine__pb2.HowEntityByEntityIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def HowEntityByEntityID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/HowEntityByEntityID_V2",
            g2engine__pb2.HowEntityByEntityID_V2Request.SerializeToString,
            g2engine__pb2.HowEntityByEntityID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Init(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/Init",
            g2engine__pb2.InitRequest.SerializeToString,
            g2engine__pb2.InitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def InitWithConfigID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/InitWithConfigID",
            g2engine__pb2.InitWithConfigIDRequest.SerializeToString,
            g2engine__pb2.InitWithConfigIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PrimeEngine(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/PrimeEngine",
            g2engine__pb2.PrimeEngineRequest.SerializeToString,
            g2engine__pb2.PrimeEngineResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Process(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/Process",
            g2engine__pb2.ProcessRequest.SerializeToString,
            g2engine__pb2.ProcessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ProcessWithInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ProcessWithInfo",
            g2engine__pb2.ProcessWithInfoRequest.SerializeToString,
            g2engine__pb2.ProcessWithInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PurgeRepository(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/PurgeRepository",
            g2engine__pb2.PurgeRepositoryRequest.SerializeToString,
            g2engine__pb2.PurgeRepositoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ReevaluateEntity(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ReevaluateEntity",
            g2engine__pb2.ReevaluateEntityRequest.SerializeToString,
            g2engine__pb2.ReevaluateEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ReevaluateEntityWithInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ReevaluateEntityWithInfo",
            g2engine__pb2.ReevaluateEntityWithInfoRequest.SerializeToString,
            g2engine__pb2.ReevaluateEntityWithInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ReevaluateRecord(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ReevaluateRecord",
            g2engine__pb2.ReevaluateRecordRequest.SerializeToString,
            g2engine__pb2.ReevaluateRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ReevaluateRecordWithInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ReevaluateRecordWithInfo",
            g2engine__pb2.ReevaluateRecordWithInfoRequest.SerializeToString,
            g2engine__pb2.ReevaluateRecordWithInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Reinit(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/Reinit",
            g2engine__pb2.ReinitRequest.SerializeToString,
            g2engine__pb2.ReinitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ReplaceRecord(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ReplaceRecord",
            g2engine__pb2.ReplaceRecordRequest.SerializeToString,
            g2engine__pb2.ReplaceRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ReplaceRecordWithInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/ReplaceRecordWithInfo",
            g2engine__pb2.ReplaceRecordWithInfoRequest.SerializeToString,
            g2engine__pb2.ReplaceRecordWithInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SearchByAttributes(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/SearchByAttributes",
            g2engine__pb2.SearchByAttributesRequest.SerializeToString,
            g2engine__pb2.SearchByAttributesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SearchByAttributes_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/SearchByAttributes_V2",
            g2engine__pb2.SearchByAttributes_V2Request.SerializeToString,
            g2engine__pb2.SearchByAttributes_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Stats(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/Stats",
            g2engine__pb2.StatsRequest.SerializeToString,
            g2engine__pb2.StatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def StreamExportCSVEntityReport(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/g2engine.G2Engine/StreamExportCSVEntityReport",
            g2engine__pb2.StreamExportCSVEntityReportRequest.SerializeToString,
            g2engine__pb2.StreamExportCSVEntityReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def StreamExportJSONEntityReport(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/g2engine.G2Engine/StreamExportJSONEntityReport",
            g2engine__pb2.StreamExportJSONEntityReportRequest.SerializeToString,
            g2engine__pb2.StreamExportJSONEntityReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WhyEntities(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/WhyEntities",
            g2engine__pb2.WhyEntitiesRequest.SerializeToString,
            g2engine__pb2.WhyEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WhyEntities_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/WhyEntities_V2",
            g2engine__pb2.WhyEntities_V2Request.SerializeToString,
            g2engine__pb2.WhyEntities_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WhyEntityByEntityID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/WhyEntityByEntityID",
            g2engine__pb2.WhyEntityByEntityIDRequest.SerializeToString,
            g2engine__pb2.WhyEntityByEntityIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WhyEntityByEntityID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/WhyEntityByEntityID_V2",
            g2engine__pb2.WhyEntityByEntityID_V2Request.SerializeToString,
            g2engine__pb2.WhyEntityByEntityID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WhyEntityByRecordID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/WhyEntityByRecordID",
            g2engine__pb2.WhyEntityByRecordIDRequest.SerializeToString,
            g2engine__pb2.WhyEntityByRecordIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WhyEntityByRecordID_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/WhyEntityByRecordID_V2",
            g2engine__pb2.WhyEntityByRecordID_V2Request.SerializeToString,
            g2engine__pb2.WhyEntityByRecordID_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WhyRecords(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/WhyRecords",
            g2engine__pb2.WhyRecordsRequest.SerializeToString,
            g2engine__pb2.WhyRecordsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WhyRecords_V2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2engine.G2Engine/WhyRecords_V2",
            g2engine__pb2.WhyRecords_V2Request.SerializeToString,
            g2engine__pb2.WhyRecords_V2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
