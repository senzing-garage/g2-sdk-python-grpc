# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

# pylint: disable=R0205,R0902,R0903,R0913,E1101


import grpc

from . import g2configmgr_pb2 as g2configmgr__pb2


class G2ConfigMgrStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddConfig = channel.unary_unary(
            "/g2configmgr.G2ConfigMgr/AddConfig",
            request_serializer=g2configmgr__pb2.AddConfigRequest.SerializeToString,
            response_deserializer=g2configmgr__pb2.AddConfigResponse.FromString,
        )
        self.Destroy = channel.unary_unary(
            "/g2configmgr.G2ConfigMgr/Destroy",
            request_serializer=g2configmgr__pb2.DestroyRequest.SerializeToString,
            response_deserializer=g2configmgr__pb2.DestroyResponse.FromString,
        )
        self.GetConfig = channel.unary_unary(
            "/g2configmgr.G2ConfigMgr/GetConfig",
            request_serializer=g2configmgr__pb2.GetConfigRequest.SerializeToString,
            response_deserializer=g2configmgr__pb2.GetConfigResponse.FromString,
        )
        self.GetConfigList = channel.unary_unary(
            "/g2configmgr.G2ConfigMgr/GetConfigList",
            request_serializer=g2configmgr__pb2.GetConfigListRequest.SerializeToString,
            response_deserializer=g2configmgr__pb2.GetConfigListResponse.FromString,
        )
        self.GetDefaultConfigID = channel.unary_unary(
            "/g2configmgr.G2ConfigMgr/GetDefaultConfigID",
            request_serializer=g2configmgr__pb2.GetDefaultConfigIDRequest.SerializeToString,
            response_deserializer=g2configmgr__pb2.GetDefaultConfigIDResponse.FromString,
        )
        self.Init = channel.unary_unary(
            "/g2configmgr.G2ConfigMgr/Init",
            request_serializer=g2configmgr__pb2.InitRequest.SerializeToString,
            response_deserializer=g2configmgr__pb2.InitResponse.FromString,
        )
        self.ReplaceDefaultConfigID = channel.unary_unary(
            "/g2configmgr.G2ConfigMgr/ReplaceDefaultConfigID",
            request_serializer=g2configmgr__pb2.ReplaceDefaultConfigIDRequest.SerializeToString,
            response_deserializer=g2configmgr__pb2.ReplaceDefaultConfigIDResponse.FromString,
        )
        self.SetDefaultConfigID = channel.unary_unary(
            "/g2configmgr.G2ConfigMgr/SetDefaultConfigID",
            request_serializer=g2configmgr__pb2.SetDefaultConfigIDRequest.SerializeToString,
            response_deserializer=g2configmgr__pb2.SetDefaultConfigIDResponse.FromString,
        )


class G2ConfigMgrServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Destroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetConfigList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetDefaultConfigID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReplaceDefaultConfigID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SetDefaultConfigID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_G2ConfigMgrServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "AddConfig": grpc.unary_unary_rpc_method_handler(
            servicer.AddConfig,
            request_deserializer=g2configmgr__pb2.AddConfigRequest.FromString,
            response_serializer=g2configmgr__pb2.AddConfigResponse.SerializeToString,
        ),
        "Destroy": grpc.unary_unary_rpc_method_handler(
            servicer.Destroy,
            request_deserializer=g2configmgr__pb2.DestroyRequest.FromString,
            response_serializer=g2configmgr__pb2.DestroyResponse.SerializeToString,
        ),
        "GetConfig": grpc.unary_unary_rpc_method_handler(
            servicer.GetConfig,
            request_deserializer=g2configmgr__pb2.GetConfigRequest.FromString,
            response_serializer=g2configmgr__pb2.GetConfigResponse.SerializeToString,
        ),
        "GetConfigList": grpc.unary_unary_rpc_method_handler(
            servicer.GetConfigList,
            request_deserializer=g2configmgr__pb2.GetConfigListRequest.FromString,
            response_serializer=g2configmgr__pb2.GetConfigListResponse.SerializeToString,
        ),
        "GetDefaultConfigID": grpc.unary_unary_rpc_method_handler(
            servicer.GetDefaultConfigID,
            request_deserializer=g2configmgr__pb2.GetDefaultConfigIDRequest.FromString,
            response_serializer=g2configmgr__pb2.GetDefaultConfigIDResponse.SerializeToString,
        ),
        "Init": grpc.unary_unary_rpc_method_handler(
            servicer.Init,
            request_deserializer=g2configmgr__pb2.InitRequest.FromString,
            response_serializer=g2configmgr__pb2.InitResponse.SerializeToString,
        ),
        "ReplaceDefaultConfigID": grpc.unary_unary_rpc_method_handler(
            servicer.ReplaceDefaultConfigID,
            request_deserializer=g2configmgr__pb2.ReplaceDefaultConfigIDRequest.FromString,
            response_serializer=g2configmgr__pb2.ReplaceDefaultConfigIDResponse.SerializeToString,
        ),
        "SetDefaultConfigID": grpc.unary_unary_rpc_method_handler(
            servicer.SetDefaultConfigID,
            request_deserializer=g2configmgr__pb2.SetDefaultConfigIDRequest.FromString,
            response_serializer=g2configmgr__pb2.SetDefaultConfigIDResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "g2configmgr.G2ConfigMgr", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class G2ConfigMgr(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddConfig(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2configmgr.G2ConfigMgr/AddConfig",
            g2configmgr__pb2.AddConfigRequest.SerializeToString,
            g2configmgr__pb2.AddConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Destroy(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2configmgr.G2ConfigMgr/Destroy",
            g2configmgr__pb2.DestroyRequest.SerializeToString,
            g2configmgr__pb2.DestroyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetConfig(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2configmgr.G2ConfigMgr/GetConfig",
            g2configmgr__pb2.GetConfigRequest.SerializeToString,
            g2configmgr__pb2.GetConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetConfigList(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2configmgr.G2ConfigMgr/GetConfigList",
            g2configmgr__pb2.GetConfigListRequest.SerializeToString,
            g2configmgr__pb2.GetConfigListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetDefaultConfigID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2configmgr.G2ConfigMgr/GetDefaultConfigID",
            g2configmgr__pb2.GetDefaultConfigIDRequest.SerializeToString,
            g2configmgr__pb2.GetDefaultConfigIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Init(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2configmgr.G2ConfigMgr/Init",
            g2configmgr__pb2.InitRequest.SerializeToString,
            g2configmgr__pb2.InitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ReplaceDefaultConfigID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2configmgr.G2ConfigMgr/ReplaceDefaultConfigID",
            g2configmgr__pb2.ReplaceDefaultConfigIDRequest.SerializeToString,
            g2configmgr__pb2.ReplaceDefaultConfigIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SetDefaultConfigID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/g2configmgr.G2ConfigMgr/SetDefaultConfigID",
            g2configmgr__pb2.SetDefaultConfigIDRequest.SerializeToString,
            g2configmgr__pb2.SetDefaultConfigIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
